{"version":3,"sources":["../../../api/server/controllers/BookController.js"],"names":["util","Util","BookController","req","res","BookService","getAllBooks","allBooks","length","setSuccess","send","setError","body","title","price","description","newBook","addBook","createdBook","message","alteredBook","id","params","Number","updateBook","getABook","theBook","deleteBook","bookToDelete"],"mappings":"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","sourcesContent":["import BookService from '../services/BookService';\nimport Util from '../utils/Utils';\n\nconst util = new Util();\n\nclass BookController {\n    static async getAllBooks(req, res) {\n        try {\n            const allBooks = await BookService.getAllBooks();\n            if (allBooks.length > 0) {\n                util.setSuccess(200, 'Books retrieved', allBooks);\n            } else {\n                util.setSuccess(200, 'No book found');\n            }\n            return util.send(res);\n        } catch (error) {\n            util.setError(400, error);\n            return util.send(res);\n        }\n    }\n\n    static async addBook(req, res) {\n        if (!req.body.title || !req.body.price || !req.body.description) {\n            util.setError(400, 'Please provide complete details');\n            return util.send(res);\n        }\n        const newBook = req.body;\n        try {\n            const createdBook = await BookService.addBook(newBook);\n            util.setSuccess(201, 'Book Added!', createdBook);\n            return util.send(res);\n        } catch (error) {\n            util.setError(400, error.message);\n            return util.send(res);\n        }\n    }\n\n    static async updatedBook(req, res) {\n        const alteredBook = req.body;\n        const { id } = req.params;\n        if (!Number(id)) {\n            util.setError(400, 'Please input a valid numeric value');\n            return util.send(res);\n        }\n        try {\n            const updateBook = await BookService.updateBook(id, alteredBook);\n            if (!updateBook) {\n                util.setError(404, `Cannot find book with the id: ${id}`);\n            } else {\n                util.setSuccess(200, 'Book updated', updateBook);\n            }\n            return util.send(res);\n        } catch (error) {\n            util.setError(404, error);\n            return util.send(res);\n        }\n    }\n\n    static async getABook(req, res) {\n        const { id } = req.params;\n\n        if (!Number(id)) {\n            util.setError(400, 'Please input a valid numeric value');\n            return util.send(res);\n        }\n\n        try {\n            const theBook = await BookService.getABook(id);\n\n            if (!theBook) {\n                util.setError(404, `Cannot find book with the id ${id}`);\n            } else {\n                util.setSuccess(200, 'Found Book', theBook);\n            }\n            return util.send(res);\n        } catch (error) {\n            util.setError(404, error);\n            return util.send(res);\n        }\n    }\n\n    static async deleteBook(req, res) {\n        const { id } = req.params;\n\n        if (!Number(id)) {\n            util.setError(400, 'Please provide a numeric value');\n            return util.send(res);\n        }\n\n        try {\n            const bookToDelete = await BookService.deleteBook(id);\n\n            if (bookToDelete) {\n                util.setSuccess(200, 'Book deleted');\n            } else {\n                util.setError(404, `Book with the id ${id} cannot be found`);\n            }\n            return util.send(res);\n        } catch (error) {\n            util.setError(400, error);\n            return util.send(res);\n        }\n    }\n}\n\nexport default BookController;"],"file":"BookController.js"}